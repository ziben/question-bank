generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  email         String    @unique
  password      String
  name          String?
  role          String    @default("USER") // "USER" | "ADMIN"
  questions     Question[]
  roles         UserRole[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Role {
  id            Int       @id @default(autoincrement())
  name          String    @unique
  description   String?
  permissions   Permission[]
  users         UserRole[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model UserRole {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [userId], references: [id])
  userId        Int
  role          Role      @relation(fields: [roleId], references: [id])
  roleId        Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([userId, roleId])
}

model Permission {
  id            Int       @id @default(autoincrement())
  name          String    @unique  // e.g., "user.create", "question.read"
  description   String?
  roles         Role[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  questions   Question[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Subject {
  id          Int       @id @default(autoincrement())
  name        String    @unique // 如：数学、语文、英语
  description String?
  questions   Question[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Grade {
  id          Int       @id @default(autoincrement())
  name        String    @unique // 如：一年级、初一、高一
  description String?
  questions   Question[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Source {
  id          Int       @id @default(autoincrement())
  name        String    @unique // 来源名称
  type        String    // 类型：SCHOOL（学校）, INSTITUTION（机构）, EXAM（考试）
  description String?
  questions   Question[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Question {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  type        String    // "multiple_choice" | "true_false" | "essay"
  difficulty  Int       @default(3) // 1-5 星
  options     String?   // JSON string for multiple choice options
  answer      String    // For multiple choice: correct option index, for others: answer text
  explanation String?   // Explanation for the answer
  tags        String?   // JSON array of tags
  
  // 关联字段
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  subject     Subject   @relation(fields: [subjectId], references: [id])
  subjectId   Int
  grade       Grade     @relation(fields: [gradeId], references: [id])
  gradeId     Int
  source      Source    @relation(fields: [sourceId], references: [id])
  sourceId    Int
  createdBy   User      @relation(fields: [userId], references: [id])
  userId      Int
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
